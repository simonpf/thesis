
# Based on the Solarize_Light2 style distributed with Matplotlib.

#base00     ='#657b83'
#base01     ='#93a1a1'
#base2      ='#eee8d5'
#base3      ='#fdf6e3'
#base01     ='#586e75'
#Magenta    ='#d33682'
#Blue       ='#268bd2'
#cyan       ='#2aa198'
#violet     ='#6c71c4'
#green      ='#859900'
#orange     ='#cb4b16'

figure.facecolor    : FFFFFF

patch.antialiased   : True

lines.linewidth     : 2.0
lines.solid_capstyle: butt

axes.labelcolor     : 505050
axes.facecolor      : FFFFFF
axes.edgecolor      : 505050
axes.axisbelow      : True
axes.prop_cycle: cycler('color', ['008fd5', 'fc4f30', 'e5ae38', '6d904f', '8b8b8b', '810f7c'])
# Blue
# Cyan
# Green
# Yellow
# Orange
# Red
# Magenta
# Violet
axes.grid           : True
grid.color          : 505050    # grid color
grid.linestyle      : -         # line
grid.linewidth      : 1         # in points

### TICKS
xtick.color         : 505050
xtick.direction     : out

ytick.color         : 505050
ytick.direction     : out

# Title
axes.titlesize      : large
axes.titlepad       : 16.0
axes.titlecolor     : 505050
axes.titleweight    : bold

axes.labelsize      : large  ## fontsize of the x any y labels
axes.labelpad       : 5.0     ## space between label and axis
axes.labelweight    : normal  ## weight of the x and y labels

#### LaTeX customizations. See http://wiki.scipy.org/Cookbook/Matplotlib/UsingTex
text.usetex         : True  ## use latex for all text handling. The following fonts
                              ## are supported through the usual rc parameter settings:
                              ## new century schoolbook, bookman, times, palatino,
                              ## zapf chancery, charter, serif, sans-serif, helvetica,
                              ## avant garde, courier, monospace, computer modern roman,
                              ## computer modern sans serif, computer modern typewriter
                              ## If another font is desired which can loaded using the
                              ## LaTeX \usepackage command, please inquire at the
                              ## matplotlib mailing list
text.latex.preamble : \usepackage{amsmath}\usepackage{lmodern}\usepackage{siunitx}\usepackage{cmbright}\renewcommand*\sfdefault{cmss}\renewcommand*\ttdefault{cmtt}
                            ## AND IS THEREFORE UNSUPPORTED. PLEASE DO NOT ASK FOR HELP
                            ## IF THIS FEATURE DOES NOT DO WHAT YOU EXPECT IT TO.
                            ## text.latex.preamble is a single line of LaTeX code that
                            ## will be passed on to the LaTeX system. It may contain
                            ## any code that is valid for the LaTeX "preamble", i.e.
                            ## between the "\documentclass" and "\begin{document}"
                            ## statements.
                            ## Note that it has to be put on a single line, which may
                            ## become quite long.
                            ## The following packages are always loaded with usetex, so
                            ## beware of package collisions: color, geometry, graphicx,
                            ## type1cm, textcomp.
                            ## Adobe Postscript (PSSNFS) font packages may also be
                            ## loaded, depending on your font settings.

text.hinting : auto   ## May be one of the following:
                       ##   none: Perform no hinting
                       ##   auto: Use FreeType's autohinter
                       ##   native: Use the hinting information in the
                       #              font file, if available, and if your
                       #              FreeType library supports it
                       ##   either: Use the native hinting information,
                       #              or the autohinter if none is available.
                       ## For backward compatibility, this value may also be
                       ## True === 'auto' or False === 'none'.
text.hinting_factor : 8 ## Specifies the amount of softness for hinting in the
                         ## horizontal direction.  A value of 1 will hint to full
                         ## pixels.  A value of 2 will hint to half pixels etc.
text.antialiased : True ## If True (default), the text will be antialiased.
                         ## This only affects the Agg backend.

#### FONT

## font properties used by text.Text.  See
## http://matplotlib.org/api/font_manager_api.html for more
## information on font properties.  The 6 font properties used for font
## matching are given below with their default values.
##
## The font.family property has five values: 'serif' (e.g., Times),
## 'sans-serif' (e.g., Helvetica), 'cursive' (e.g., Zapf-Chancery),
## 'fantasy' (e.g., Western), and 'monospace' (e.g., Courier).  Each of
## these font families has a default list of font names in decreasing
## order of priority associated with them.  When text.usetex is False,
## font.family may also be one or more concrete font names.
##
## The font.style property has three values: normal (or roman), italic
## or oblique.  The oblique style will be used for italic, if it is not
## present.
##
## The font.variant property has two values: normal or small-caps.  For
## TrueType fonts, which are scalable fonts, small-caps is equivalent
## to using a font size of 'smaller', or about 83%% of the current font
## size.
##
## The font.weight property has effectively 13 values: normal, bold,
## bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
## 400, and bold is 700.  bolder and lighter are relative values with
## respect to the current weight.
##
## The font.stretch property has 11 values: ultra-condensed,
## extra-condensed, condensed, semi-condensed, normal, semi-expanded,
## expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
## property is not currently implemented.
##
## The font.size property is the default font size for text, given in pts.
## 10 pt is the standard value.

font.family         : sans-serif
font.style          : normal
font.variant        : normal
font.weight         : normal
font.stretch        : normal
## note that font.size controls default text sizes.  To configure
## special text sizes tick labels, axes, labels, title, etc, see the rc
## settings for axes and ticks. Special text sizes can be defined
## relative to font.size, using the following values: xx-small, x-small,
## small, medium, large, x-large, xx-large, larger, or smaller
font.size           : 14.0


#### Legend
legend.loc           : best
legend.frameon       : False     ## if True, draw the legend on a background patch
legend.framealpha    : 1.0      ## legend patch transparency
legend.facecolor     : FFFFFF  ## inherit from axes.facecolor; or color spec
legend.edgecolor     : 1.0      ## background patch boundary color
legend.fancybox      : True     ## if True, use a rounded box for the
                                 ## legend background, else a rectangle
legend.shadow        : False    ## if True, give background a shadow effect
legend.numpoints     : 1        ## the number of marker points in the legend line
legend.scatterpoints : 2        ## number of scatter points
legend.markerscale   : 1.0      ## the relative size of legend markers vs. original
legend.fontsize      : small
legend.title_fontsize    : None ## None sets to the same as the default axes.